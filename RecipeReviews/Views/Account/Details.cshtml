@using RecipeReviews.Controllers

@model RecipeReviews.Models.Account

@{
    ViewData["Title"] = "Account Details";

    var picLabel = Model.PictureFilename == null ? "Add profile picture" : "Edit profile picture";
    var id = ViewData["AccountId"];
}

<h3>@Model.Username</h3>
<p class="mt-1">Created: @Html.DisplayFor(model => model.Created)</p>
@{
    if (ViewData["NumberOfRecipes"] != null)
    {
        <p class="mt-1">Number of recipes: @ViewData["NumberOfRecipes"]</p>
    }
}

<img id=@AccountController.ProfilePictureId src=@ViewData["ProfilePictureSrc"] class="profile-pic-medium" />
<form id="editImage" asp-action="EditProfilePicture" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <input id="Image" name="Image" type="file" accept="image/png, image/jpeg, image/jpg" /><br />
        <span id=@AccountController.ProfilePictureErrorId class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Upload" class="btn btn-primary" /><br />
        <span id=@AccountController.SubmitPicErrorId class="text-danger"></span>
    </div>
</form>
<hr />

<div class="description-div">
    <h3>Description</h3>

    <div class="form-group text-styling-bar" title="Bold Highlighted Text">
        <button id='B' class="s-larger-font" title="Bold Highlighted Text">
            <b>B</b>
        </button>
        <button id='I' class="s-larger-font " title="Italicize Highlighted Text">
            <i>I</i>
        </button>
        <button id="U" class="s-larger-font" title="Underline Highlighted Text">
            <u>U</u>
        </button>
    </div>
    <div id="textInput" class="stylable-input" contenteditable="true">
        @Html.Raw(Model.Description)
    </div>

    @using (Html.BeginForm("EditDescription", "Account", FormMethod.Post, new { id = "editTextForm" }))
    {
        <fieldset>
            @Html.AntiForgeryToken()

            @Html.TextArea("Description", new { id = "textToPost", @class = "d-none" })
            <div class="form-group mt-3">
                <input id="editDescription" type="submit" value="Edit" class="btn btn-primary" />
                <span id=@AccountController.SubmitDescErrorId class="text-danger"></span>
                <span id=@AccountController.SubmitDescSuccessId class="text-success"></span>
            </div>
        </fieldset>
    }
</div>
<hr />

<h2 class="mt-4">Account Details</h2>
<hr />
<div class="row mt-5">
    <div class="col-md-5">
        @using (Html.BeginForm("EditEmail", "Account", FormMethod.Post, new { id = "editEmailForm" }))
        {
            Html.AntiForgeryToken();
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <fieldset class="border p-2">
                <legend class="w-auto">Edit Email</legend>
                <div class="form-group">
                    <label asp-for="Email" class="control-label font-weight-bold"></label>
                    <input asp-for="Email" class="form-control" type="email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Edit" class="btn btn-primary" />
                    <span id=@AccountController.ChangeEmailSubmitErrorId class="text-danger"></span>
                    <span id=@AccountController.ChangeEmailSubmitSuccessId class="text-success"></span>
                </div>
            </fieldset>
        }
    </div>
    <div class="col-md-6">
        @using (Html.BeginForm("EditPassword", "Account", FormMethod.Post, new { id = "editPasswordForm" }))
        {
            Html.AntiForgeryToken();
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AccountId" />
            <fieldset class="border p-2">
                <legend class="w-auto">Edit Password</legend>
                <div class="form-group">
                    <label for="oldPassword" class="control-label">Old Password</label>
                    <input name="oldPassword" class="form-control" type="password" />
                    <span id="oldPasswordError" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="Password" class="control-label">Password</label>
                    <input asp-for="Password" class="form-control" type="password" />
                    <span id=@AccountController.PasswordErrorId asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="confirmPassword" class="control-label">Confirm Password</label>
                    <input name="confirmPassword" class="form-control" type="password" />
                    <span id="confirmPasswordError" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Edit" class="btn btn-primary" />
                    <span id=@AccountController.ChangePasswordSubmitErrorId class="text-danger"></span>
                    <span id=@AccountController.ChangePasswordSuccessId class="text-success"></span>
                </div>
            </fieldset>
        }
    </div>
</div>
<hr />


<div class="mt-3 mb-2">
    <a asp-action="Profile" asp-route-id=@id>View your profile</a>
</div>
<div class="mt-5 mb-5">
    <a asp-action="Delete" asp-route-id=@id>Delete your account</a>
</div>

<script src="~/js/account.js" asp-append-version="true"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/js/styling.js" asp-append-version="true"></script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
